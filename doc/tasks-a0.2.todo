Alpha 0.2:
  Tasks to do before alpha 0.2 release
  General:
   ✔ Figure out an action system for unit and building actions and such @done (14-12-03 02:15)
   ☐ Update everything to work with the new REST api package @critical
     ✔ auth @critical @done (14-12-04 07:59)
     ☐ game @critical
     ☐ client @critical

   ☐ Change from login usernames to emails and prompt users when joining worlds for a name to use in that world @low
     Requires some changes to the database layer and api layer
    ☐ db 
    ☐ api
  
  Scheduler:
    (Main point create the scheduler)
    The shdeduler tells tickers when to tick, and what they should do
    ☐ Plan/doc the scheduler
    Connects to tickers over tcp
 
  Ticker:
    The ticker makes the world go around
    ✔ Figure out the action system and document it @done (14-12-03 02:33)
    ☐ Implement said action system

  DB:
    General improvements and such to the redis implementation
   ☐ Write tests and benchmarks @high
   ☐ Optimise and use more concurrency
   ☐ Do checking to see if the actual chunks/layers/user etc were getting exists(return a predefined error then) @high
   ☐ Go over everything and make sure everything returns proper error codes
   ☐ Change from storing the world in layers to chunks
      Also store it in a binary format, as opposed to json for improved speed and memory usage
   ☐ Add chunk locks
  World:
   ☐ Organise the world package better
   ✔ Check nearby chunks when flagging blocks visible or not @done (14-11-11 17:44)
   ☐ write tests and benchmarks 
   ☐ Rename world package to game @high
     ☐ Make everything work with the the new package name @critical

   Worldgen:
    ✘ Implement world extending @cancelled (14-12-03 02:32)
      Delay this for later versions perhaps?
      Extends a allready generated world, making it bigger
      Not needed with procedural generator
    ✘ Rivers @cancelled (14-12-03 02:18)
    ☐ Oceans
    ☐ Trees
    ✔ Basic Caves @done (14-11-16 02:46)
      Broken, will be disabled in 0.2 release
    ☐ Make the world generator procedural
      staged, generate a new chunk, and flag that chunk + recheck flags on surounding chunks
    Wgen options:
     ☐ Add more advaned world gen options
     ☐ Use blocks.json 
     ☐ USe biomes.json

  Authserver:
   ☐ Password recovery
     Through email or something
   ☐ Change password
   ☐ Change email
   ✘ Change username @cancelled (14-12-04 03:32)
     Later you will sign in with email instead.

  Master Server:
    ☐ Create a simple package for interacting with the master server
    ☐ Create the master server itself
      ☐ Logserver
        Stores logs in a database, be it mongodb couchdb or something else, will have to figure that out
      ☐ Server manager
        Manages server instances
        Just a basic one, that takes in information from servers

  Frontend: 
   ☐ Maybe change from backbone.js to knockout.js
     Need to read more up on it
   ☐ Add Password recovery somewhere on the login page
   ☐ Add accounts info settings page
     email, password and username change are all located there
    Client:
     ☐ Complete rewrite of the client 
     ☐ Simple ui
     ☐ Simple selection(units, tiles, buildings)
     ☐ Model loading and handling
     ☐ Animations
       Maybe save this one for 0.3
     ☐ Try out isometric 
     ☐ Right click menu
       Simple list menu for now, change to something like a circle later
     ✔ Add voxel raycast that dosent lag the fuck out of everything... @done (14-11-19 23:57)
     ☐ Change mice.js and keyboard.js into a single input library
     ✔ Move chunk decoding and meshing to a backrgound worker @done (14-11-11 17:07)
     ✔ Change to buffer geometry from normal geometry @done (14-11-11 17:07)
       Makes it easier to move the chunk between workers, as i can just tranfser ownership of the typed arrays and fill the buffers on the main thread
     ✔ Change from getting individual layers, to a whole chunk @done (14-11-15 01:00)
     ✔ Add a simple indicator to where your mouse is @done (14-11-15 01:01)
     ✔ Change the meshing @done (14-11-19 02:39)
       ✔ Instead of mshiing only the surface, make a big square out of the chunk @done (14-11-19 02:39)
       ✔ Dont mesh chunk sides unless they are not flagged hidden @done (14-11-19 02:39)
     ☐ Use index buffers to reduce the size of the vertex coords buffer 
       Postpone this to later perhaps
     Selection:
      ☐ Create basic selection
      ☐ Box selection
      ☐ Filter in box selection
    Lobby:
     ☐ Password recovery in login @low
     ☐ Make it possible to change password and email in settings @low
       
    Admin:
     ☐ Simple overview
     ☐ Simple log view

  GameServer:
   ✔ Add /chunk @done (14-11-12 00:47)
   ✔ Dont send layers that are completely hidden @done (14-11-12 00:47)
     in /chunk request
   ✔ Add some form of compression @done (14-11-14 21:49)
     built in browser gzip maybe, unless that decompresses in the main thread

  REST Server:
   ✔ Redo the REST server, to make it easier to return appropiate status codes, add middle handles and such @done (14-12-04 03:39)
     Maybe chose a third party one instead of coding one yourself, coding one myself however lets me add some fortia specific things
   ✔ Allow the selection of content type from both requests and responses from response header, and reuest parameters @done (14-12-04 03:39)
     ✔ JSON @done (14-12-04 03:39)
     ✔ protobuf @done (14-12-04 03:39)
   ☐ Make it easier to log requests
     which includes information such as remot address, request path and body
     on body, fields tagged sensitive are ignored

  Bugs:
   ☐ The bottom layer is always air, shoudl be bedrock(to be implemented) @low