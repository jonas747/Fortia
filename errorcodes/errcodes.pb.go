// Code generated by protoc-gen-go.
// source: errcodes.proto
// DO NOT EDIT!

/*
Package errorcodes is a generated protocol buffer package.

It is generated from these files:
	errcodes.proto

It has these top-level messages:
*/
package errorcodes

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type ErrorCode int32

const (
	// Redis
	ErrorCode_RedisDialError          ErrorCode = 1
	ErrorCode_RedisKeyNotFound        ErrorCode = 2
	ErrorCode_RedisWriteReadErr       ErrorCode = 3
	ErrorCode_RedisReplyConversionErr ErrorCode = 4
	// Decoding/encoding errors
	ErrorCode_JsonEncodeErr  ErrorCode = 5
	ErrorCode_JsonDecodeErr  ErrorCode = 6
	ErrorCode_ProtoEncodeErr ErrorCode = 7
	ErrorCode_ProtoDecodeErr ErrorCode = 8
	// Misc
	ErrorCode_FileReadErr  ErrorCode = 9
	ErrorCode_BCryptErr    ErrorCode = 10
	ErrorCode_NetDialErr   ErrorCode = 11
	ErrorCode_UnKnownErr   ErrorCode = 12
	ErrorCode_PageNotFound ErrorCode = 404
	ErrorCode_IoReadErr    ErrorCode = 18
	ErrorCode_CastErr      ErrorCode = 20
	// Rest errors
	ErrorCode_ClientSupportsNoCompression     ErrorCode = 13
	ErrorCode_NoHandlerForSelectedCompression ErrorCode = 14
	ErrorCode_Unauthorized                    ErrorCode = 15
	ErrorCode_MissingRequiredParams           ErrorCode = 16
	ErrorCode_ErrCreatingListener             ErrorCode = 17
	ErrorCode_RequestBodyRequired             ErrorCode = 19
	ErrorCode_ServeErr                        ErrorCode = 21
	// Account
	ErrorCode_IncorrectLoginCredentials ErrorCode = 22
	ErrorCode_InvalidUsername           ErrorCode = 23
	ErrorCode_InvalidPassword           ErrorCode = 24
	ErrorCode_InvalidEmail              ErrorCode = 25
	ErrorCode_UsernameTaken             ErrorCode = 26
	// Ticker
	ErrorCode_NoHandlerForAction ErrorCode = 27
)

var ErrorCode_name = map[int32]string{
	1:   "RedisDialError",
	2:   "RedisKeyNotFound",
	3:   "RedisWriteReadErr",
	4:   "RedisReplyConversionErr",
	5:   "JsonEncodeErr",
	6:   "JsonDecodeErr",
	7:   "ProtoEncodeErr",
	8:   "ProtoDecodeErr",
	9:   "FileReadErr",
	10:  "BCryptErr",
	11:  "NetDialErr",
	12:  "UnKnownErr",
	404: "PageNotFound",
	18:  "IoReadErr",
	20:  "CastErr",
	13:  "ClientSupportsNoCompression",
	14:  "NoHandlerForSelectedCompression",
	15:  "Unauthorized",
	16:  "MissingRequiredParams",
	17:  "ErrCreatingListener",
	19:  "RequestBodyRequired",
	21:  "ServeErr",
	22:  "IncorrectLoginCredentials",
	23:  "InvalidUsername",
	24:  "InvalidPassword",
	25:  "InvalidEmail",
	26:  "UsernameTaken",
	27:  "NoHandlerForAction",
}
var ErrorCode_value = map[string]int32{
	"RedisDialError":                  1,
	"RedisKeyNotFound":                2,
	"RedisWriteReadErr":               3,
	"RedisReplyConversionErr":         4,
	"JsonEncodeErr":                   5,
	"JsonDecodeErr":                   6,
	"ProtoEncodeErr":                  7,
	"ProtoDecodeErr":                  8,
	"FileReadErr":                     9,
	"BCryptErr":                       10,
	"NetDialErr":                      11,
	"UnKnownErr":                      12,
	"PageNotFound":                    404,
	"IoReadErr":                       18,
	"CastErr":                         20,
	"ClientSupportsNoCompression":     13,
	"NoHandlerForSelectedCompression": 14,
	"Unauthorized":                    15,
	"MissingRequiredParams":           16,
	"ErrCreatingListener":             17,
	"RequestBodyRequired":             19,
	"ServeErr":                        21,
	"IncorrectLoginCredentials":       22,
	"InvalidUsername":                 23,
	"InvalidPassword":                 24,
	"InvalidEmail":                    25,
	"UsernameTaken":                   26,
	"NoHandlerForAction":              27,
}

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}
func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}
func (x *ErrorCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ErrorCode_value, data, "ErrorCode")
	if err != nil {
		return err
	}
	*x = ErrorCode(value)
	return nil
}

func init() {
	proto.RegisterEnum("errorcodes.ErrorCode", ErrorCode_name, ErrorCode_value)
}
